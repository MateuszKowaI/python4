import cv2
import numpy as np

def main():
    # Load the pre-trained model
    net = cv2.dnn.readNet("coco/model.pbtxt", "coco/weights.pb")

    # Load the image
    image = cv2.imread("obraz.png")
    if image is None:
        print("Image not found or path is incorrect.")
        return

    # Prepare input blob for the network
    blob = cv2.dnn.blobFromImage(
        image,
        1.0 / 127.5,
        size=(300, 300),
        mean=(127.5, 127.5, 127.5),
        swapRB=True,
        crop=False
    )
    net.setInput(blob)
    detections = net.forward()

    # Load class labels
    with open("coco/labels.txt") as file:
        class_names = [label.strip() for label in file.readlines()]

    h, w = image.shape[:2]
    conf_threshold = 0.66

    # Process detections
    for i in range(detections.shape[2]):
        confidence = float(detections[0, 0, i, 2])
        if confidence > conf_threshold:
            class_id = int(detections[0, 0, i, 1])
            box = detections[0, 0, i, 3:7] * np.array([w, h, w, h])
            (x1, y1, x2, y2) = box.astype('int')
            label = f"{class_names[class_id - 1]}: {confidence * 100:.1f}%"
            cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.putText(image, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

    # Display result
    cv2.imshow("Object Detection", image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

if __name__ == '__main__':
    main()
